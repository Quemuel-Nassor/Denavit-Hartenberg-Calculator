@using CoreShared.Constants
@using CoreShared.ModelsDto;
@model List<CoreShared.ModelsDto.CalculatorInput>

<form class="my-4" id="joints" asp-controller="Calculator" asp-action="Joint"
      method="POST"
      data-ajax-method="POST"
      data-ajax="true"
      data-ajax-mode="replace"
      data-ajax-update="#joints">

    @for (int i = 0; i < Model.Count; i++)
    {
        <div id="joint-@i" class="col-md-12 px-0">
            <div class="row w-auto">
                <div class="col-md-auto">
                    <div class="form-group">
                        @Html.LabelFor(j => j[i].Theta)
                        @Html.EditorFor(j => j[i].Theta, "", "Theta", new { htmlAttributes = new { @type = "number", @class = "form-control" } })
                        @Html.ValidationMessageFor(j => j[i].Theta)
                    </div>
                </div>
                <div class="col-md-auto">
                    <div class="form-group">
                        @Html.LabelFor(j => j[i].DistanceD)
                        @Html.EditorFor(j => j[i].DistanceD, "", "DistanceD", new { htmlAttributes = new { @min = "0", @type = "number", @class = "form-control" } })
                        @Html.ValidationMessageFor(j => j[i].DistanceD)
                    </div>
                </div>
                <div class="col-md-auto">
                    <div class="form-group">
                        @Html.LabelFor(j => j[i].DistanceA)
                        @Html.EditorFor(j => j[i].DistanceA, "", "DistanceA", new { htmlAttributes = new { @min = "0", @type = "number", @class = "form-control" } })
                        @Html.ValidationMessageFor(j => j[i].DistanceA)
                    </div>
                </div>
                <div class="col-md-auto">
                    <div class="form-group">

                        @Html.LabelFor(j => j[i].Alpha)
                        @Html.EditorFor(j => j[i].Alpha, "", "Alpha", new { htmlAttributes = new { @type = "number", @class = "form-control" } })
                        @Html.ValidationMessageFor(j => j[i].Alpha)
                    </div>
                </div>

                @{
                    JointInput removeJoint = new JointInput() { Index = i, Joints = Model };
                    JointInput addJoint = new JointInput() { Joints = Model };
                }

                @*Submit button*@
                <div class="col-md-auto">
                    <div class="form-group pt-2">
                        <label></label>
                        <div class="row">
                            <button type="submit" onclick="@Html.ActionLink("","Joint","Calculator", addJoint)" class="ml-1 btn btn-success">
                                <span>&#43;</span>
                            </button>
                            <button type="submit" disabled="@i == 0" onclick="@Html.ActionLink("","Joint","Calculator", removeJoint)" class="ml-2 btn btn-danger">
                                <span>&times;</span>
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
</form>
